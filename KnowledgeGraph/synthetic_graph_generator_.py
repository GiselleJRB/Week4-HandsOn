# -*- coding: utf-8 -*-
"""synthetic_graph_generator_

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/19krtSxEPhe4UTx5w_dtuDce1SsyyxfPe
"""

import networkx as nx
import random

# Set size of synthetic graph
NUM_AGENTS = 5000
NUM_ZONES = 3000
NUM_TASKS = 1500
NUM_ANOMALIES = 300

# Create empty graph
G = nx.Graph()

# Add agents
for i in range(NUM_AGENTS):
    G.add_node(f'agent_{i}', type='Agent', trust=round(random.uniform(0.5, 1.0), 2))

# Add zones
for i in range(NUM_ZONES):
    G.add_node(f'zone_{i}', type='Zone', status=random.choice(['safe', 'blocked']))

# Add tasks
for i in range(NUM_TASKS):
    G.add_node(f'task_{i}', type='Task')

# Add anomalies
for i in range(NUM_ANOMALIES):
    G.add_node(f'anomaly_{i}', type='Anomaly', kind=random.choice(['GPS_Spoofing', 'Sensor_Tampering']))

# Random edges between agents and zones
for i in range(NUM_AGENTS):
    G.add_edge(f'agent_{i}', f'zone_{random.randint(0, NUM_ZONES - 1)}', relation='OPERATES_IN')

# Random edges between agents and tasks
for i in range(NUM_AGENTS):
    if i < NUM_TASKS:
        G.add_edge(f'agent_{i}', f'task_{i}', relation='PERFORMS')

# Random edges between zones and anomalies
for i in range(NUM_ANOMALIES):
    G.add_edge(f'zone_{random.randint(0, NUM_ZONES - 1)}', f'anomaly_{i}', relation='COMPROMISED_BY')

print("Synthetic graph generated with", len(G.nodes), "nodes and", len(G.edges), "edges.")

# Export to GraphML
nx.write_graphml(G, "synthetic_graph.graphml")